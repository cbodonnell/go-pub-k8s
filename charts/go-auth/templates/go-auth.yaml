apiVersion: v1
kind: Secret
metadata:
  name: go-auth-postgres
stringData:
  {{- if .Values.postgres.external.enabled }}
  db_host: {{ .Values.postgres.external.host }}
  {{- else }}
  db_host: go-auth-postgres
  {{- end }}
  db_name: {{ .Values.postgres.database }}
  db_user: {{ .Values.postgres.user }}
  db_password: {{ .Values.postgres.password }}
---
apiVersion: v1
kind: Secret
metadata:
  name: go-auth-jwt
stringData:
  jwt_key: {{ .Values.config.jwtSecret }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-auth
  labels:
    app: go-auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go-auth
  template:
    metadata:
      labels:
        app: go-auth
    spec:
      containers:
      - name: go-auth
        image: cheebz/go-auth
        # resources: # TODO: Determine eventually
        #   requests:
        #     memory: "128Mi"
        #     cpu: "100m"
        #   limits:
        #     memory: "128Mi"
        #     cpu: "100m"
        ports:
        - containerPort: 80
        env:
        - name: DB_HOST
          valueFrom: 
            secretKeyRef:
              name: go-auth-postgres
              key: db_host
        - name: DB_NAME
          valueFrom: 
            secretKeyRef:
              name: go-auth-postgres
              key: db_name
        - name: DB_USER
          valueFrom: 
            secretKeyRef:
              name: go-auth-postgres
              key: db_user
        - name: DB_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: go-auth-postgres
              key: db_password
        - name: JWT_KEY
          valueFrom: 
            secretKeyRef:
              name: go-auth-jwt
              key: jwt_key
        # TODO: Pass authRegister value here
---
apiVersion: v1
kind: Service
metadata:
  name: go-auth
spec:
  selector:
    app: go-auth
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80