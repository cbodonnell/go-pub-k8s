apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-pub
  labels:
    app: go-pub
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go-pub
  template:
    metadata:
      labels:
        app: go-pub
      annotations:
        configSha: {{ include (print $.Template.BasePath "/backend/config.yaml") . | sha256sum }}
    spec:
      containers:
      - name: go-pub
        image: cheebz/go-pub
        resources: # TODO: Determine eventually
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 80
        env:
        - name: SERVER_NAME
          valueFrom: 
            configMapKeyRef:
              name: go-pub-config
              key: server_name
        - name: AUTH
          valueFrom: 
            configMapKeyRef:
              name: go-pub-config
              key: auth_endpoint
        - name: CLIENT
          valueFrom: 
            configMapKeyRef:
              name: go-pub-config
              key: client_endpoint
        - name: DB_HOST
          valueFrom: 
            configMapKeyRef:
              name: go-pub-config
              key: db_host
        - name: DB_NAME
          valueFrom: 
            secretKeyRef:
              name: go-pub-postgres
              key: db_name
        - name: DB_USER
          valueFrom: 
            secretKeyRef:
              name: go-pub-postgres
              key: db_user
        - name: DB_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: go-pub-postgres
              key: db_password
        - name: RSA_PUBLIC_KEY
          valueFrom: 
            configMapKeyRef:
              name: go-pub-config
              key: rsa_public_key
        - name: RSA_PRIVATE_KEY
          valueFrom: 
            configMapKeyRef:
              name: go-pub-config
              key: rsa_private_key
        - name: UPLOAD_DIR
          valueFrom: 
            configMapKeyRef:
              name: go-pub-config
              key: upload_dir
        - name: REDIS_HOST
          valueFrom: 
            configMapKeyRef:
              name: go-pub-config
              key: redis_host
        - name: REDIS_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: go-pub-redis
              key: redis_password
        volumeMounts:
        - name: go-pub-rsa-volume
          readOnly: true
          mountPath: "/etc/rsa"
        - name: go-pub-uploads-volume
          readOnly: true
          mountPath: "/data/uploads"
      volumes:
        # - name: go-pub-logs
        #   persistentVolumeClaim:
        #     claimName: go-pub-logs-claim
        - name: go-pub-rsa-volume
          secret:
            secretName: go-pub-rsa
        - name: go-pub-uploads-volume
          persistentVolumeClaim:
            claimName: go-pub-uploads
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: go-pub-uploads
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 500Mi
  selector:
    matchLabels:
      app: go-pub-uploads
---
apiVersion: v1
kind: Service
metadata:
  name: go-pub-service
spec:
  selector:
    app: go-pub
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80