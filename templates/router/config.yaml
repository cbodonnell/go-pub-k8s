apiVersion: v1
kind: ConfigMap
metadata:
  name: go-pub-nginx-config
data:
  default.conf: |
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=fwd_proxy_cache:10m max_size=10g inactive=60m use_temp_path=off;

    server {
      listen 80;
      server_name {{ .Values.serverName }};

      # error_page 418 = @activity;
      # recursive_error_pages on;

      location /auth/ {
        proxy_pass http://go-auth/auth/;
      }

      location /proxy/ {
        proxy_cache fwd_proxy_cache;
        proxy_pass http://pancors/;
        # remove x-forwarded-host header
        proxy_set_header X-Forwarded-Host "";
      }

      location @activity {
        client_max_body_size 32M;
        proxy_pass http://go-pub/;
        proxy_set_header Host $host;
      }

      location / {
        # if the accept header contains application/activity+json, proxy to the activity server
        if ($http_accept ~* "application/activity\+json") {
            return 418;
        }
        # if the accept header contains application/ld+json; profile="https://www.w3.org/ns/activitystreams", proxy to the activity server
        if ($http_accept ~* 'application\/ld\+json; profile="https:\/\/www\.w3\.org\/ns\/activitystreams"') {
            return 418;
        }

        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
        expires -1; # Set it to different value depending on your standard requirements
      }
    }